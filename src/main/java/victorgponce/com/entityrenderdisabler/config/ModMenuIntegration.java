package victorgponce.com.entityrenderdisabler.config;

import com.terraformersmc.modmenu.api.ConfigScreenFactory;
import com.terraformersmc.modmenu.api.ModMenuApi;

import dev.isxander.yacl3.api.*;
import dev.isxander.yacl3.api.controller.TickBoxControllerBuilder;
import net.minecraft.text.Text;;

class ModMenuIntegration implements ModMenuApi {

    public boolean allayOption;
    public boolean areaEffectCloudOption;
    public boolean armadilloOption;
    public boolean armorStandOption;
    public boolean arrowOption;
    public boolean axolotlOption;
    public boolean batOption;
    public boolean beeOption;
    public boolean blazeOption;
    public boolean blockDisplayOption;
    public boolean boatOption;
    public boolean camelOption;
    public boolean catOption;
    public boolean caveSpiderOption;
    public boolean chestBoatOption;
    public boolean chickenOption;
    public boolean codOption;
    public boolean cowOption;
    public boolean creeperOption;
    public boolean dolphinOption;
    public boolean donkeyOption;
    public boolean drownedOption;
    public boolean eggOption;
    public boolean elderGuardianOption;
    public boolean enderDragonOption;
    public boolean enderPearlOption;
    public boolean endermanOption;
    public boolean endermiteOption;
    public boolean evokerOption;
    public boolean experienceBottleOption;
    public boolean experienceOrbOption;
    public boolean fireworkRocketOption;
    public boolean foxOption;
    public boolean furnaceMinecartOption;
    public boolean ghastOption;
    public boolean giantOption;
    public boolean glowItemFrameOption;
    public boolean glowSquidOption;
    public boolean goatOption;
    public boolean guardianOption;
    public boolean horseOption;
    public boolean huskOption;
    public boolean ironGolemOption;
    public boolean itemOption;
    public boolean llamaOption;
    public boolean magmaCubeOption;
    public boolean minecartOption;
    public boolean mooshroomOption;
    public boolean muleOption;
    public boolean ocelotOption;
    public boolean pandaOption;
    public boolean parrotOption;
    public boolean pigOption;
    public boolean piglinOption;
    public boolean pillagerOption;
    public boolean polarBearOption;
    public boolean potionOption;
    public boolean pufferfishOption;
    public boolean rabbitOption;
    public boolean ravagerOption;
    public boolean salmonOption;
    public boolean sheepOption;
    public boolean shulkerOption;
    public boolean skeletonOption;
    public boolean slimeOption;
    public boolean snowGolemOption;
    public boolean snowballOption;
    public boolean spiderOption;
    public boolean squidOption;
    public boolean strayOption;
    public boolean tntOption;
    public boolean traderLlamaOption;
    public boolean tridentOption;
    public boolean turtleOption;
    public boolean villagerOption;
    public boolean vindicatorOption;
    public boolean wardenOption;
    public boolean witchOption;
    public boolean witherOption;
    public boolean witherSkeletonOption;
    public boolean wolfOption;
    public boolean zombieOption;
    public boolean zombieHorseOption;
    public boolean zombieVillagerOption;
    public boolean zombifiedPiglinOption;
    public boolean breezeWindChargeOption;
    public boolean commandBlockMinecartOption;
    public boolean dragonFireballOption;
    public boolean endCrystalOption;
    public boolean eyeOfEnderOption;
    public boolean fireballOption;
    public boolean interactionOption;
    public boolean itemDisplayOption;
    public boolean itemFrameOption;
    public boolean leashKnotOption;
    public boolean lightningBoltOption;
    public boolean llamaSpitOption;
    public boolean markerOption;
    public boolean ominousItemSpawnerOption;
    public boolean spectralArrowOption;
    public boolean striderOption;
    public boolean tadpoleOption;
    public boolean textDisplayOption;
    public boolean tntMinecartOption;
    public boolean wanderingTraderOption;
    public boolean windChargeOption;
    public boolean witherSkullOption;
    public boolean fishingBobberOption;


    @Override
    public ConfigScreenFactory<?> getModConfigScreenFactory() {
        return parentScreen -> YetAnotherConfigLib.createBuilder()
                .title(Text.literal("Mobs"))
                .category(ConfigCategory.createBuilder()
                        .name(Text.literal("Mobs Selector"))
                        .tooltip(Text.literal("Select the mobs you want to disable/enable it's render. If the box is ticked, the render is enabled"))
                        .group(OptionGroup.createBuilder()
                                .name(Text.literal("Entities"))
                                .description(OptionDescription.of(Text.literal("Overworld mobs.")))
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Allay"))
                                        .binding(ConfigHandler.config.allayOption,
                                                () -> ConfigHandler.config.allayOption,
                                                newVal -> {
                                                    ConfigHandler.config.allayOption = newVal;
                                                    ConfigHandler.saveConfig();
                                                })
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Area Effect Cloud"))
                                        .binding(true, () -> this.areaEffectCloudOption, newVal -> this.areaEffectCloudOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Armadillo"))
                                        .binding(true, () -> this.armadilloOption, newVal -> this.armadilloOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Armor Stand"))
                                        .binding(true, () -> this.armorStandOption, newVal -> this.armorStandOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Arrow"))
                                        .binding(true, () -> this.arrowOption, newVal -> this.arrowOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Axolotl"))
                                        .binding(true, () -> this.axolotlOption, newVal -> this.axolotlOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Bat"))
                                        .binding(true, () -> this.batOption, newVal -> this.batOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Bee"))
                                        .binding(true, () -> this.beeOption, newVal -> this.beeOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Blaze"))
                                        .binding(true, () -> this.blazeOption, newVal -> this.blazeOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Block Display"))
                                        .binding(true, () -> this.blockDisplayOption, newVal -> this.blockDisplayOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Boat"))
                                        .binding(true, () -> this.boatOption, newVal -> this.boatOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Camel"))
                                        .binding(true, () -> this.camelOption, newVal -> this.camelOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Cat"))
                                        .binding(true, () -> this.catOption, newVal -> this.catOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Cave Spider"))
                                        .binding(true, () -> this.caveSpiderOption, newVal -> this.caveSpiderOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Chest Boat"))
                                        .binding(true, () -> this.chestBoatOption, newVal -> this.chestBoatOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Chicken"))
                                        .binding(true, () -> this.chickenOption, newVal -> this.chickenOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Cod"))
                                        .binding(true, () -> this.codOption, newVal -> this.codOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Cow"))
                                        .binding(true, () -> this.cowOption, newVal -> this.cowOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Creeper"))
                                        .binding(true, () -> this.creeperOption, newVal -> this.creeperOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Dolphin"))
                                        .binding(true, () -> this.dolphinOption, newVal -> this.dolphinOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Donkey"))
                                        .binding(true, () -> this.donkeyOption, newVal -> this.donkeyOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Drowned"))
                                        .binding(true, () -> this.drownedOption, newVal -> this.drownedOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Egg"))
                                        .binding(true, () -> this.eggOption, newVal -> this.eggOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Elder Guardian"))
                                        .binding(true, () -> this.elderGuardianOption, newVal -> this.elderGuardianOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Ender Dragon"))
                                        .binding(true, () -> this.enderDragonOption, newVal -> this.enderDragonOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Ender Pearl"))
                                        .binding(true, () -> this.enderPearlOption, newVal -> this.enderPearlOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Enderman"))
                                        .binding(true, () -> this.endermanOption, newVal -> this.endermanOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Endermite"))
                                        .binding(true, () -> this.endermiteOption, newVal -> this.endermiteOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Evoker"))
                                        .binding(true, () -> this.evokerOption, newVal -> this.evokerOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Experience Bottle"))
                                        .binding(true, () -> this.experienceBottleOption, newVal -> this.experienceBottleOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Experience Orb"))
                                        .binding(true, () -> this.experienceOrbOption, newVal -> this.experienceOrbOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Firework Rocket"))
                                        .binding(true, () -> this.fireworkRocketOption, newVal -> this.fireworkRocketOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Fox"))
                                        .binding(true, () -> this.foxOption, newVal -> this.foxOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Furnace Minecart"))
                                        .binding(true, () -> this.furnaceMinecartOption, newVal -> this.furnaceMinecartOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Ghast"))
                                        .binding(true, () -> this.ghastOption, newVal -> this.ghastOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Giant"))
                                        .binding(true, () -> this.giantOption, newVal -> this.giantOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Glow Item Frame"))
                                        .binding(true, () -> this.glowItemFrameOption, newVal -> this.glowItemFrameOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Glow Squid"))
                                        .binding(true, () -> this.glowSquidOption, newVal -> this.glowSquidOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Goat"))
                                        .binding(true, () -> this.goatOption, newVal -> this.goatOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Guardian"))
                                        .binding(true, () -> this.guardianOption, newVal -> this.guardianOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Horse"))
                                        .binding(true, () -> this.horseOption, newVal -> this.horseOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Husk"))
                                        .binding(true, () -> this.huskOption, newVal -> this.huskOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Iron Golem"))
                                        .binding(true, () -> this.ironGolemOption, newVal -> this.ironGolemOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Item"))
                                        .binding(true, () -> this.itemOption, newVal -> this.itemOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Llama"))
                                        .binding(true, () -> this.llamaOption, newVal -> this.llamaOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Magma Cube"))
                                        .binding(true, () -> this.magmaCubeOption, newVal -> this.magmaCubeOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Minecart"))
                                        .binding(true, () -> this.minecartOption, newVal -> this.minecartOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Mooshroom"))
                                        .binding(true, () -> this.mooshroomOption, newVal -> this.mooshroomOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Mule"))
                                        .binding(true, () -> this.muleOption, newVal -> this.muleOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Ocelot"))
                                        .binding(true, () -> this.ocelotOption, newVal -> this.ocelotOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Panda"))
                                        .binding(true, () -> this.pandaOption, newVal -> this.pandaOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Parrot"))
                                        .binding(true, () -> this.parrotOption, newVal -> this.parrotOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Pig"))
                                        .binding(true, () -> this.pigOption, newVal -> this.pigOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Piglin"))
                                        .binding(true, () -> this.piglinOption, newVal -> this.piglinOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Pillager"))
                                        .binding(true, () -> this.pillagerOption, newVal -> this.pillagerOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Polar Bear"))
                                        .binding(true, () -> this.polarBearOption, newVal -> this.polarBearOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Potion"))
                                        .binding(true, () -> this.potionOption, newVal -> this.potionOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Pufferfish"))
                                        .binding(true, () -> this.pufferfishOption, newVal -> this.pufferfishOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Rabbit"))
                                        .binding(true, () -> this.rabbitOption, newVal -> this.rabbitOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Ravager"))
                                        .binding(true, () -> this.ravagerOption, newVal -> this.ravagerOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Salmon"))
                                        .binding(true, () -> this.salmonOption, newVal -> this.salmonOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Sheep"))
                                        .binding(true, () -> this.sheepOption, newVal -> this.sheepOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Shulker"))
                                        .binding(true, () -> this.shulkerOption, newVal -> this.shulkerOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Skeleton"))
                                        .binding(true, () -> this.skeletonOption, newVal -> this.skeletonOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Slime"))
                                        .binding(true, () -> this.slimeOption, newVal -> this.slimeOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Snow Golem"))
                                        .binding(true, () -> this.snowGolemOption, newVal -> this.snowGolemOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Snowball"))
                                        .binding(true, () -> this.snowballOption, newVal -> this.snowballOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Spider"))
                                        .binding(true, () -> this.spiderOption, newVal -> this.spiderOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Squid"))
                                        .binding(true, () -> this.squidOption, newVal -> this.squidOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Stray"))
                                        .binding(true, () -> this.strayOption, newVal -> this.strayOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("TNT"))
                                        .binding(true, () -> this.tntOption, newVal -> this.tntOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Trader Llama"))
                                        .binding(true, () -> this.traderLlamaOption, newVal -> this.traderLlamaOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Trident"))
                                        .binding(true, () -> this.tridentOption, newVal -> this.tridentOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Turtle"))
                                        .binding(true, () -> this.turtleOption, newVal -> this.turtleOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Villager"))
                                        .binding(true, () -> this.villagerOption, newVal -> this.villagerOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Vindicator"))
                                        .binding(true, () -> this.vindicatorOption, newVal -> this.vindicatorOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Warden"))
                                        .binding(true, () -> this.wardenOption, newVal -> this.wardenOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Witch"))
                                        .binding(true, () -> this.witchOption, newVal -> this.witchOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Wither"))
                                        .binding(true, () -> this.witherOption, newVal -> this.witherOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Wither Skeleton"))
                                        .binding(true, () -> this.witherSkeletonOption, newVal -> this.witherSkeletonOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Wolf"))
                                        .binding(true, () -> this.wolfOption, newVal -> this.wolfOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Zombie"))
                                        .binding(true, () -> this.zombieOption, newVal -> this.zombieOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Zombie Horse"))
                                        .binding(true, () -> this.zombieHorseOption, newVal -> this.zombieHorseOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Zombie Villager"))
                                        .binding(true, () -> this.zombieVillagerOption, newVal -> this.zombieVillagerOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Zombified Piglin"))
                                        .binding(true, () -> this.zombifiedPiglinOption, newVal -> this.zombifiedPiglinOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Breeze Wind Charge"))
                                        .binding(true, () -> this.breezeWindChargeOption, newVal -> this.breezeWindChargeOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Command Block Minecart"))
                                        .binding(true, () -> this.commandBlockMinecartOption, newVal -> this.commandBlockMinecartOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Dragon Fireball"))
                                        .binding(true, () -> this.dragonFireballOption, newVal -> this.dragonFireballOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("End Crystal"))
                                        .binding(true, () -> this.endCrystalOption, newVal -> this.endCrystalOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Eye Of Ender"))
                                        .binding(true, () -> this.eyeOfEnderOption, newVal -> this.eyeOfEnderOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Fireball"))
                                        .binding(true, () -> this.fireballOption, newVal -> this.fireballOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Item Display"))
                                        .binding(true, () -> this.itemDisplayOption, newVal -> this.itemDisplayOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Item Frame"))
                                        .binding(true, () -> this.itemFrameOption, newVal -> this.itemFrameOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Leash Knot"))
                                        .binding(true, () -> this.leashKnotOption, newVal -> this.leashKnotOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Lightning Bolt"))
                                        .binding(true, () -> this.lightningBoltOption, newVal -> this.lightningBoltOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Llama Spit"))
                                        .binding(true, () -> this.llamaSpitOption, newVal -> this.llamaSpitOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Marker"))
                                        .binding(true, () -> this.markerOption, newVal -> this.markerOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Ominous Item Spawner"))
                                        .binding(true, () -> this.ominousItemSpawnerOption, newVal -> this.ominousItemSpawnerOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Spectral Arrow"))
                                        .binding(true, () -> this.spectralArrowOption, newVal -> this.spectralArrowOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Strider"))
                                        .binding(true, () -> this.striderOption, newVal -> this.striderOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Tadpole"))
                                        .binding(true, () -> this.tadpoleOption, newVal -> this.tadpoleOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Text Display"))
                                        .binding(true, () -> this.textDisplayOption, newVal -> this.textDisplayOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("TNT Minecart"))
                                        .binding(true, () -> this.tntMinecartOption, newVal -> this.tntMinecartOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Wandering Trader"))
                                        .binding(true, () -> this.wanderingTraderOption, newVal -> this.wanderingTraderOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Wind Charge"))
                                        .binding(true, () -> this.windChargeOption, newVal -> this.windChargeOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Wither Skull"))
                                        .binding(true, () -> this.witherSkullOption, newVal -> this.witherSkullOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())
                                .option(Option.<Boolean>createBuilder()
                                        .name(Text.literal("Fishing Bobber"))
                                        .binding(true, () -> this.fishingBobberOption, newVal -> this.fishingBobberOption = newVal)
                                        .controller(TickBoxControllerBuilder::create)
                                        .build())

                                .build())
                        .build())
                .build()
                .generateScreen(parentScreen);
    }
}
